MEMORY {
    ZP: start = 0, size = $100, type = rw;
    RAM: start = $100, size = $800-$100, type = rw;
    SRAM: start = $6000, size = $2000, type = rw;
    HDR: start = $0000, size = $10, type = ro, fill = yes;

    PRG0: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 0;

    PRG1: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 1;
    PRG2: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 2;
    PRG3: start = $A000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 3;
    PRG4: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 4;
    PRG5: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 5;
    PRG6: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 6;
    PRG7: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 7;
    PRG8: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 8;
    PRG9: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = 9;
    PRGA: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $a;
    PRGB: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $b;
    PRGC: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $c;
    PRGD: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $d;
    PRGE: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $e;
    PRGF: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $f;

    PRG10: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $10;
    PRG11: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $11;
    PRG12: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $12;
    PRG13: start = $A000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $13;
    PRG14: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $14;
    SPRITES: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $15;
    PRG16: start = $8000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $16;
    PRG17: start = $A000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $17;
    PRG18: start = $0000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $18;
    PRG19: start = $2000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $19;
    PRG1A: start = $4000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $1A;
    PRG1B: start = $6000, size = $2000, type = ro, fill = yes, fillval = $FF, bank = $1B;
    MUSIC: start = $8000, size = $4000-$200, type = ro, fill = yes, fillval = $FF, bank = $1c;
    SAVEFILE: start = $7400, size = $200, type = ro, fill = yes, fillval = $FF, define = yes;
    CONSTANT: start = $C000, size = $4000-$c0, type = ro, fill = yes, fillval = $FF, bank = $1e;
    VECTORS: start = $FF40, size = $C0, type = ro, fill = yes, fillval = $FF;

    CHR0: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR1: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR2: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR3: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR4: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR5: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR6: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR7: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR8: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHR9: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHRA: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;

    CHRB: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHRC: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHRD: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHRE: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;
    CHRF: start = $0000, size = $2000, type = ro, fill = yes, fillval = $ff;

    #naming screen code position in saveram
    NAMING_SCREEN: start = $6000, size = $1400, type = ro, define = yes;
}

SEGMENTS {
    ZP: load = ZP, type = zp;
    RAM: load = RAM, type = bss, align = $100, define = yes;
    SRAM: load = SRAM, type = bss, align = $100, define = yes;
    HEADER: load = HDR, type = ro, align = $10;

    PRG0: load = PRG0, type = ro;
    PRG1: load = PRG1, type = ro;
    PRG2: load = PRG2, type = ro;
    PRG3: load = PRG3, type = ro;
    PRG4: load = PRG4, type = ro;
    PRG5: load = PRG5, type = ro;
    PRG6: load = PRG6, type = ro;
    PRG7: load = PRG7, type = ro;
    PRG8: load = PRG8, type = ro;
    PRG9: load = PRG9, type = ro;
    PRGA: load = PRGA, type = ro;
    PRGB: load = PRGB, type = ro;
    PRGC: load = PRGC, type = ro;
    PRGD: load = PRGD, type = ro;
    PRGE: load = PRGE, type = ro;
    PRGF: load = PRGF, type = ro;
    PRG10: load = PRG10, type = ro;
    PRG11: load = PRG11, type = ro;
    PRG12: load = PRG12, type = ro;
    PRG13: load = PRG13, type = ro;
    PRG14: load = PRG14, type = ro;
    SPRITES: load = SPRITES, type = ro;
    PRG16: load = PRG16, type = ro;
    PRG17: load = PRG17, type = ro;
    PRG18: load = PRG18, type = ro;
    PRG19: load = PRG19, type = ro;
    PRG1A: load = PRG1A, type = ro;
    PRG1B: load = PRG1B, type = ro;
    MUSIC: load = MUSIC, type = ro;
    SAVEFILE: load = SAVEFILE, type = ro;
    CONSTANT: load = CONSTANT, type = ro;
    VECTORS: load = VECTORS, type = ro;

    CHR0: load = CHR0, type = ro, define = no;
    CHR1: load = CHR1, type = ro, define = no;
    CHR2: load = CHR2, type = ro, define = no;
    CHR3: load = CHR3, type = ro, define = no;
    CHR4: load = CHR4, type = ro, define = no;
    CHR5: load = CHR5, type = ro, define = no;
    CHR6: load = CHR6, type = ro, define = no;
    CHR7: load = CHR7, type = ro, define = no;
    CHR8: load = CHR8, type = ro, define = no;
    CHR9: load = CHR9, type = ro, define = no;
    CHRA: load = CHRA, type = ro, define = no;

    CHRB: load = CHRB, type = ro, define = no;

    CHRC: load = CHRC, type = ro, define = no;
    CHRD: load = CHRD, type = ro, define = no;
    CHRE: load = CHRE, type = ro, define = no;

    CHRF: load = CHRF, type = ro, define = no;
    NAMING_SCREEN_1: load = CHRF, run = NAMING_SCREEN, type = ro, align_load = $800, define = yes;
    NAMING_SCREEN_2: load = CHRB, run = NAMING_SCREEN, type = ro, align_load = $1800, align = $C00, define = yes;
    CHRF_2: load = CHRF, type = ro, start = $1000 define = no;
}

FILES {
    %O: format = bin;
}